version: '3'

services:
  monolith:
    container_name: monolith
      # Операция подключит внешний носитель
    # но в то же самое время - затрет все изменения
    # Которые были произведены в момент сборки контейнера
    volumes:
      - ./monolith/src:/var/www/html
      # В таком случае можно описать команду, которая будет вызываться каждый раз
      # при старте контейнера (уже после его сборки)
      # метод удобен для разработчиков PHP, NodeJS
      #    command: sh -c "composer update && supervisord -c /etc/supervisor/conf.d/supervisord.conf" #  && /var/www/html/artisan serve --host=0.0.0.0"
      # Второй вариант - описать установку зависимостей в supervisor - как
      # одноразово запускаемую задачу
    ports:
      - "80:80"
    build:
      context: ./monolith
      dockerfile: Dockerfile
    networks:
      - xampp8

  phpmyadmin:
        image: phpmyadmin
        ports:
          - "3030:80"
        environment:
          - PMA_HOST=db.mysql
          - PMA_PORT=3306
        networks:
          - xampp8
  db.mysql:
        container_name: mysql
        build:
          context: ./dockers/mysql
          dockerfile: Dockerfile
            # Для доступа к базе данных мне нужно предоставить доступ к порту
          # Мы описываем правило - внешний порт: внутренний порт
          # Эта операция не нужна, если доступ в базу снаружи (вне докера) не нужен
        ports:
          - "3306:3306"
        volumes:
            - ./volumes/db/mysql:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: password
        networks:
            - xampp8

networks:
  xampp8:
        driver: bridge